[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 0,
  "modified": "2024-03-14 19:59:09.205850",
  "module": "Ctrine",
  "name": "Reason",
  "script": "frappe.ui.form.on('Timesheet', {\n    refresh: function(frm) {\n        if (cur_frm.doc.workflow_state === 'Approval') {\n            // Define a function to show the dialog\n            var showDialog = function() {\n                let d = new frappe.ui.Dialog({\n                    title: 'Reason',\n                    fields: [{\n                        label: 'Reason',\n                        fieldname: 'reason',\n                        fieldtype: 'Small Text'\n                    }],\n                    size: 'large',\n                    primary_action_label: __('Submit'),\n                    primary_action: function() {\n                        frappe.call({\n                            method: 'ctrine.ctrine.server_scripts.timesheet.approve_reason',\n                            args: {\n                                docname: frm.docname,\n                                reason: d.get_value('reason'),\n                            },\n                            callback: function(response) {\n                                console.log(response.message);\n                                frm.reload_doc();\n                                d.hide();\n                            }\n                        });\n                    }\n                });\n                d.show();\n            };\n\n            // Invoke the function to show the dialog\n            showDialog();\n        }\n    }\n});\n\n\n------------CS----------------------",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2024-03-20 14:42:26.991461",
  "module": "Ctrine",
  "name": "Timesheet and story",
  "script": "frappe.ui.form.on('Timesheet Detail', {\r\n    project: function(frm, cdt, cdn) {\r\n        var child = locals[cdt][cdn];\r\n        console.log(child);\r\n        var project = child.project;\r\n        var from_date_string = child.from_time; // Assuming from_date is in string format\r\n        // Convert from_date string to Date object\r\n        var from_date = new Date(from_date_string);\r\n        // Convert from_date to YYYY-MM-DD format using frappe.datetime\r\n        var formatted_date = frappe.datetime.obj_to_str(from_date).split(' ')[0];\r\n        frappe.call({\r\n            method: 'ctrine.ctrine.server_scripts.story.fetch_hours',\r\n            args:{\r\n                project_name: project,\r\n                from_date: formatted_date, // Pass formatted date string\r\n            },\r\n            callback: function(r) {\r\n                if (r.message) {\r\n                    var totalHours = r.message;\r\n                    console.log(totalHours);\r\n                    frappe.model.set_value(cdt, cdn, 'billing_hours', totalHours);\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2024-03-14 21:50:09.187584",
  "module": "Ctrine",
  "name": "Reason Prompt",
  "script": "frappe.ui.form.on('Timesheet', {\n    refresh: function(frm) {\n        if(frappe.user.has_role(\"Report Manager\")){\n       if (((cur_frm.doc.workflow_state === 'Approved')||(cur_frm.doc.workflow_state === 'Rejected'))&& !cur_frm.doc.reason) {\n            // Define a function to show the dialog\n            var showDialog = function() {\n                let d = new frappe.ui.Dialog({\n                    title: 'Reason',\n                    fields: [{\n                        label: 'Reason',\n                        fieldname: 'reason',\n                        fieldtype: 'Small Text'\n                    }],\n                    size: 'large',\n                    primary_action_label: __('Submit'),\n                    primary_action: function() {\n                        frappe.call({\n                            method: 'ctrine.ctrine.server_scripts.reason.reason',\n                            args: {\n                                docname: frm.docname,\n                                reason: d.get_value('reason'),\n                            },\n                            callback: function(response) {\n                                if(response.message==='success'){\n                                frappe.show_alert({\n                                message: \"Reason saved\",\n                                indicator: \"green\"\n                                });\n                                }\n           \n                                console.log(response.message);\n                                frm.reload_doc();\n                                d.hide();\n                            }\n                        });\n                    }\n                });\n                d.show();\n            };\n\n            // Invoke the function to show the dialog\n            showDialog();\n        }\n        } \n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Project Milestone",
  "enabled": 1,
  "modified": "2024-02-21 14:04:44.526688",
  "module": null,
  "name": "project Milestone",
  "script": "frappe.ui.form.on('Project Milestone', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Go To Project'), function(){\n            window.open(`/app/project/${frm.doc.parent_project}`)\n        });\n        \n    \t frm.add_custom_button(__('Go To Task'), function(){\n            window.open(`/app/task?custom_parent_milestone=${frm.doc.name}`)\n        });\n        \n        frm.add_custom_button(__('Go To Story'), function(){\n           window.open(`/app/story?parent_milestone=${frm.doc.name}`)\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Story",
  "enabled": 1,
  "modified": "2024-02-21 14:05:16.745203",
  "module": null,
  "name": "Story",
  "script": "frappe.ui.form.on('Story', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__('Go To Project'), function(){\n            window.open(`/app/project/${frm.doc.parent_project}`)\n        });\n        frm.add_custom_button(__('Go To Milestone'), function(){\n            window.open(`/app/project-milestone/${frm.doc.parent_milestone}`)\n        });\n        frm.add_custom_button(__('Go To Task'), function(){\n            window.open(`/app/task/view/list?custom_parent_story=${frm.doc.name}`)\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 1,
  "modified": "2024-02-21 14:05:02.448313",
  "module": null,
  "name": "Task",
  "script": "frappe.ui.form.on('Task', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__('Go To Project'), function(){\n            window.open(`/app/project/${frm.doc.project}`)\n        });\n        frm.add_custom_button(__('Go To Milestone'), function(){\n            window.open(`/app/project-milestone/${frm.doc.custom_parent_milestone}`)\n        });\n        frm.add_custom_button(__('Go To Story'), function(){\n            window.open(`/app/story/${frm.doc.custom_parent_story}`)\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2024-03-20 13:21:36.187063",
  "module": "Ctrine",
  "name": "Populating Rows",
  "script": "frappe.ui.form.on('Timesheet', {\r\n    onload: function(frm) {\r\n        // Check if the document is not saved or submitted\r\n        if (frm.doc.__unsaved) {\r\n            var creation_datetime;\r\n            // Fetch current date and time when creating a new timesheet\r\n            creation_datetime = frappe.datetime.now_datetime();\r\n\r\n            // Calculate the start date of the week (Monday) based on the creation date\r\n            var current_date = new Date(creation_datetime);\r\n            var dayOfWeek = current_date.getDay();\r\n            var start_of_week = new Date(current_date); // Copy current date to avoid modifying the original date\r\n            start_of_week.setDate(current_date.getDate() - dayOfWeek + 1);\r\n\r\n            // Clear existing rows in the child table\r\n            frm.clear_table('time_logs');\r\n\r\n            // Populate rows in the child table for the days of the week (Monday to Sunday)\r\n            for (var i = 0; i < 7; i++) {\r\n                var new_row = frappe.model.add_child(frm.doc, \"Timesheet Detail\", \"time_logs\");\r\n                new_row.from_time = frappe.datetime.add_days(start_of_week, i);\r\n                // Set other fields editable here\r\n            }\r\n            \r\n\r\n            // Refresh the child table to reflect the changes\r\n            frm.refresh_field('time_logs');\r\n        }\r\n    },\r\n    validate: function(frm) {\r\n        // Validate hours to ensure they do not exceed 24 hours for each day\r\n        frm.doc.time_logs.forEach(function(row) {\r\n            \r\n            if (row.hours > 24) {\r\n                frappe.msgprint(\"Hours for a day cannot exceed 24 hours.\");\r\n                frappe.validated = false;\r\n                return false; // Stop further validation if any row exceeds 24 hours\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Timesheet', {\r\n    refresh: function(frm) {\r\n        // Check if the form is submitted\r\n        if (cur_frm.doc.docstatus == 1 && !frappe.user.has_role(\"Report Manager\")) {\r\n            frappe.show_alert({\r\n                message: \"Create New Timesheet\",\r\n                indicator: \"orange\"\r\n            });\r\n            //frappe.msgprint(\"Create New Timesheet\");\r\n   }\r\n}\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2024-03-18 23:39:25.368287",
  "module": "Ctrine",
  "name": "Try Validation",
  "script": "frappe.ui.form.on('Timesheet Detail', {\r\n    from_time: function(frm, cdt, cdn) {\r\n        var child = locals[cdt][cdn];\r\n        var fromTime = new Date(child.from_time);\r\n\r\n        // Get the current date\r\n        var currentDate = new Date();\r\n\r\n        // Calculate the start date of the week (Sunday)\r\n        var startOfWeek = new Date(currentDate);\r\n        startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\r\n\r\n        // Calculate the end date of the week (Saturday)\r\n        var endOfWeek = new Date(currentDate);\r\n        endOfWeek.setDate(currentDate.getDate() + (6 - currentDate.getDay()));\r\n\r\n        // Check if from_time is within the week's range\r\n        if (fromTime < startOfWeek || fromTime > endOfWeek) {\r\n            frappe.throw(\"From Date should be within this week\");\r\n            frappe.docstatus = 0; // Prevent saving\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 }
]